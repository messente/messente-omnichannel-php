<?php
/**
 * DeliveryResultTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Messente\Omnichannel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Omnichannel API
 *
 * Messente's API which allows sending messages via various channels with fallback options.
 *
 * OpenAPI spec version: 0.0.2
 * Contact: messente@messente.com
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Messente\Omnichannel;

/**
 * DeliveryResultTest Class Doc Comment
 *
 * @category    Class
 * @description DeliveryResult
 * @package     Messente\Omnichannel
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class DeliveryResultTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "DeliveryResult"
     */
    public function testDeliveryResult()
    {
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
    }

    /**
     * Test attribute "channel"
     */
    public function testPropertyChannel()
    {
    }

    /**
     * Test attribute "messageId"
     */
    public function testPropertyMessageId()
    {
    }

    /**
     * Test attribute "error"
     */
    public function testPropertyError()
    {
    }

    /**
     * Test attribute "err"
     */
    public function testPropertyErr()
    {
    }

    /**
     * Test attribute "timestamp"
     */
    public function testPropertyTimestamp()
    {
    }
}
